# Generated by Django 2.1.4 on 2018-12-31 05:35

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('image', models.ImageField(default='activities/none/activity.png', upload_to='activities/')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='ActivityStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Activity')),
            ],
            options={
                'verbose_name': 'Activity Student',
                'ordering': ('activity',),
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('image', models.ImageField(default='assignments/none/assignment.jpg', upload_to='assignments/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='AssignmentStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Assignment')),
            ],
            options={
                'verbose_name': 'Assignment Student',
                'ordering': ('assignment',),
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance', models.CharField(choices=[('P', 'Present'), ('A', 'Absent')], max_length=7)),
                ('date', models.DateField()),
            ],
            options={
                'verbose_name': 'Attendance',
                'verbose_name_plural': 'Attendances',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='ClassTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=32)),
                ('image', models.ImageField(default='classtables/none/timetable.png', upload_to='classtables/')),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'ordering': ('class_name',),
            },
        ),
        migrations.CreateModel(
            name='FeedbackStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('image', models.ImageField(default='notices/none/notice.png', upload_to='notices/')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Notice',
                'verbose_name_plural': 'Notices',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='NoticeStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Notice')),
            ],
            options={
                'verbose_name': 'Notice Student',
                'ordering': ('notice',),
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=25)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('surname', models.CharField(max_length=255)),
                ('residential_address', models.TextField(max_length=255)),
                ('primary_contact', models.CharField(max_length=13)),
                ('secondary_contact', models.CharField(blank=True, max_length=13, null=True)),
                ('occupation', models.CharField(blank=True, max_length=50, null=True)),
                ('office_address', models.TextField(blank=True, max_length=255, null=True)),
                ('office_no', models.CharField(blank=True, max_length=13, null=True)),
                ('email_id', models.EmailField(max_length=254)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('first_name', 'surname'),
            },
        ),
        migrations.CreateModel(
            name='ParentChild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.CharField(choices=[('M', 'Mother'), ('F', 'Father'), ('G', 'Guardian')], max_length=1)),
            ],
            options={
                'verbose_name': 'Parent Child Relationship',
                'verbose_name_plural': 'Parent Child Relationships',
                'ordering': ('child',),
            },
        ),
        migrations.CreateModel(
            name='PasswordResetRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temporary_password', models.CharField(max_length=5)),
                ('valid_from', models.DateTimeField(auto_now_add=True)),
                ('valid_through', models.DateTimeField()),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-valid_from',),
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_no', models.CharField(default='', max_length=10)),
                ('roll_no', models.CharField(blank=True, max_length=10, null=True)),
                ('first_name', models.CharField(max_length=25)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('surname', models.CharField(max_length=255)),
                ('dob', models.DateField(default=datetime.date.today)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('T', 'Transgender')], max_length=1, null=True)),
                ('blood_group', models.CharField(choices=[('O+ve', ' O positive'), ('O-ve', 'O negative'), ('A+ve', 'A positive'), ('A-ve', 'A negative'), ('B+ve', 'B positive'), ('B-ve', 'B negative'), ('AB+ve', 'O positive'), ('AB-ve', 'O negative'), ('U', 'Unknown')], default='U', max_length=4)),
                ('height', models.FloatField(blank=True, help_text='in cm', null=True)),
                ('weight', models.FloatField(blank=True, help_text='in kg', null=True)),
                ('address_line_1', models.TextField(blank=True, max_length=255, null=True)),
                ('address_line_2', models.TextField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=32, null=True)),
                ('district', models.CharField(blank=True, max_length=32, null=True)),
                ('state', models.CharField(blank=True, max_length=32, null=True)),
                ('country', models.CharField(blank=True, max_length=32, null=True)),
                ('pin_code', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(default='students/none/no_image.jpg', upload_to='students/')),
                ('class_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.ClassTable')),
            ],
            options={
                'ordering': ('class_id', 'roll_no'),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=32)),
            ],
            options={
                'ordering': ('subject_name',),
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=25)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('surname', models.CharField(max_length=255)),
                ('contact_no', models.CharField(max_length=13)),
                ('email_id', models.EmailField(max_length=254)),
                ('image', models.ImageField(default='teachers/none/teacher.jpg', upload_to='teachers/')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('first_name', 'surname'),
            },
        ),
        migrations.CreateModel(
            name='TeacherClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ClassTable')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Teacher')),
            ],
            options={
                'verbose_name': 'Teacher Class Relationship',
                'verbose_name_plural': 'Teacher Class Relationships',
                'ordering': ('class_id',),
            },
        ),
        migrations.AddField(
            model_name='parentchild',
            name='child',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Student'),
        ),
        migrations.AddField(
            model_name='parentchild',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Parent'),
        ),
        migrations.AddField(
            model_name='noticestudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Student'),
        ),
        migrations.AddField(
            model_name='notice',
            name='teacher_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.TeacherClass'),
        ),
        migrations.AddField(
            model_name='feedbackstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Student'),
        ),
        migrations.AddField(
            model_name='feedbackstudent',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Teacher'),
        ),
        migrations.AddField(
            model_name='classtable',
            name='class_teacher',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Teacher'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='class_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ClassTable'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Student'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Teacher'),
        ),
        migrations.AddField(
            model_name='assignmentstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Student'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='teacher_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.TeacherClass'),
        ),
        migrations.AddField(
            model_name='activitystudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Student'),
        ),
        migrations.AddField(
            model_name='activity',
            name='teacher_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.TeacherClass'),
        ),
    ]
